# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="frontcube"
ZSH_THEME="luke"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#plugins=(git)

source $ZSH/oh-my-zsh.sh
export DEFAULT_USER="shafer.361"
prompt_context(){}

# User configuration

# Preferred editor for local and remote sessions
export EDITOR="nvim"
export PC_CONTEXT="work"

export GITLAB_HOST="https://code.osu.edu/"
export GLAMOUR_STYLE="dark"

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export PATH="/opt/homebrew/opt/openjdk11/bin:$PATH"

function zrc() {
	nvim ~/.zshrc
	cp ~/.zshrc ~/.config/.zshrc.work
	source ~/.zshrc
}

function attach-tmux-if-not-attached() {
	if [ -z "$TMUX" ]; then
		tm
	fi
}
attach-tmux-if-not-attached

function tmrc() {
	nvim ~/.tmux.conf
	cp ~/.tmux.conf ~/.config/.tmux.conf
	tmr
}

function cfe() {
	cd ~/.config 
	nvim
	nvim --headless -c "autocmd User PackerComplete qa" -c PackerSync 
	cd -
}

function ztheme() {
	nvim ~/.oh-my-zsh/themes/luke.zsh-theme
	cp ~/.oh-my-zsh/themes/luke.zsh-theme ~/.config/zsh-theme/
	source ~/.zshrc
}

alias zreload="source ~/.zshrc"

alias vi="nvim"
alias vim="nvim"

alias sb="sam build"
alias sd="sam deploy --config-env ls"
alias sdg="sam deploy --guided --profile dev-crmi"
alias sbd="sb && sd"
alias ss="sam sync --watch --region us-east"
alias samb="echo \"Use sb\" && sb"
alias samd="echo \"Use sd\" && sd"
alias samdg="echo \"Use sdg\" && sdg"
alias sambd="echo \"Use sbd\" && sb && sd"

alias ga="git add"
alias gc="git commit -m"
alias gca="git commit -am"
alias gp="git push"
alias gf="git fetch"
alias gpl="git pull"
alias gs="git status"
alias gd="git diff"
alias gr="git restore --staged"
alias gacp="git add . && git commit -m $1 && git push"
alias gsh='git stash'
alias gsha='git stash apply'
alias gm='git merge'
alias gch='git checkout'
alias git-tree='git log --oneline --graph --color --all --decorate'

alias mrc='glab mr create -b dev -f -y'
alias mrdraft='glab mr create -b dev -f -y --draft'
alias mrm='glab mr merge'

alias awslogin="aws s3 ls --profile dev-crmi >> /dev/null && cat ~/.aws/saml-credentials"
alias awslogout="rm ~/.aws/saml-credentials"
alias awsreset="awslogout && awslogin"

alias tm="tmux new-session -A -s $USER"
alias tmr='tmux source ~/.tmux.conf'
alias e2e='AWS_SDK_LOAD_CONFIG=1 AWS_PROFILE=dev-crmi STAGE=ls npm test'

alias install-handlers="cd ./src/lambda/handlers/ && (find . -maxdepth 2 -name package.json -execdir npm i \;) && cd -"
alias install-lib="cd ./src/lambda/lib/ && npm i && cd -"
alias install-all="install-handlers && install-lib"
